@mixin page-top-padding(){
    margin-top: 1.5*$menu-palm-height;
    @include respond-to($lap-and-desk){
        margin-top: 1.5*$menu-lap-height;
    }
    @include respond-to($desk-only){
        margin-top: 1.5*$menu-desk-height;
    }
}

@mixin responding($property, $value){
    $palm-scale-factor: 0.85;
    $lap-scale-factor: 0.9;
    $desk-scale-factor: 1;

    #{$property}: $palm-scale-factor*$value;
    @include respond-to($lap-and-desk){
        #{$property}: $lap-scale-factor*$value;
    }
    @include respond-to($desk-only){
        #{$property}: $desk-scale-factor*$value;
    }
}

@mixin main-content($selector){

    #{$selector}{
        width: 100%;
        margin-bottom: $grid-unit*10;

        h1 {
            word-wrap: break-word;
            @include page-top-padding();
        }
        // When there's a notification, move the spacing onto that instead of H1.
        .notification {
            @include page-top-padding();
            & + h1 {
                margin-top: 2*$grid-unit;
                @include respond-to($lap-and-desk){
                    margin-top: 3*$grid-unit;
                }
                @include respond-to($desk-only){
                    margin-top: 4*$grid-unit;
                }
            }
        }
        // First panel is assumed to contain H1's inside panels
        article > *[class^='panel'].first-of-type {
            @include responding('padding', 4*$grid-unit);
        }

        @include respond-to-print(){
            &>div:first-child{
                border-top: 1px solid $colour-greyscale-39;
            }
        }
    }
}
