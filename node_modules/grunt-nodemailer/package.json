{
  "name": "grunt-nodemailer",
  "description": "Grunt wrapper for Nodemailer",
  "version": "0.2.1",
  "homepage": "https://github.com/dwightjack/grunt-nodemailer",
  "author": {
    "name": "Marco Solazzi",
    "email": "marco.solazzi@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:dwightjack/grunt-nodemailer.git"
  },
  "bugs": {
    "url": "https://github.com/dwightjack/grunt-nodemailer/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dwightjack/grunt-nodemailer/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt": "~0.4.5",
    "grunt-contrib-nodeunit": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "nodemailer": "~0.7.0",
    "lodash": "~2.4.1",
    "async": "~0.9.0"
  },
  "readme": "# grunt-nodemailer\n\n> Grunt wrapper for [Nodemailer](https://github.com/andris9/Nodemailer)\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-nodemailer --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-nodemailer');\n```\n\n## The \"nodemailer\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `nodemailer` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  nodemailer: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.transport\nType: `Object`\nDefault value: `null`\n\nA configuration object for an email transport. If left undefined or `null`, transport will default to `'sendmail'` with default options.\n\nThe configuration object should have 2 properties:\n\n* `type`: Type of transport. Valid options are: \n  * **SMTP** for using SMTP\n  * **SES** for using Amazon SES\n  * **Sendmail** for utilizing systems *sendmail* command\n* `options`: transport configuration options, see [Nodemailer documentation](https://github.com/andris9/Nodemailer#setting-up-a-transport-method) for more info.\n\n#### options.message\nType: `Object`\nDefault value: `{}`\n\nE-mail message configuration. See [Nodemailer documentation](https://github.com/andris9/Nodemailer#e-mail-message-fields) for available options.\n\n#### options.recipients\nType: `Array`\nDefault value: `[]`\n\nA collection of recipients. Every item should have 2 properties:\n\n* `name`: Name of the recipient\n* `email`: E-mail address of the recipient\n\n**Note**: Recipients specified here will be appended to those set in `options.message.to`.\n\n#### options.from **DEPRECATED since v0.2**\n\nSee [options.message](#optionsmessage) for details.\n\n#### options.subject **DEPRECATED since v0.2**\n\nSee [options.message](#optionsmessage) for details.\n\n#### options.html **DEPRECATED since v0.2**\n\nSee [options.message](#optionsmessage) for details.\n\n#### options.text **DEPRECATED since v0.2**\n\nSee [options.message](#optionsmessage) for details.\n\n### Using external files\n\n\n_**BREAKING CHANGES**: before v0.2 you had to provide 2 source files in order to pass HTML and text body message. Since v0.2 text files are automatically discovered. Keep reading for details._\n\nInstead of providing `text` and `html` message options you may use external files by setting a `src` property on the sub-task. Accepted file extensions are `.html`, `.htm` and `.txt`. \n\nIf HTML files are provided, the task will look for `.txt` files with same filename to be used as text fallbacks.\n\nExample:\n\n```js\nnodemailer: {\n  test: {\n    options: { /* ... transport, message, etc ...*/},\n    src: ['email-body.html']\n  }\n}\n\n//Will use email-body.html for HTML email body, \n//optionally using email-body.txt (if found) as text fallback\n```\n\nIf multiple files are passed in, a message for each one will be delivered.\n\n```js\nnodemailer: {\n  test: {\n    options: { /* ... transport, message, etc ...*/},\n    src: ['email-body.html', 'email-body2.html']\n  }\n}\n\n//Will send 2 messages\n```\n\n**Note**: If HTML files include `title` tag it'll be used as the message subject.\n\n### Usage Examples\n\n#### E-mail delivery with Gmail SMTP server\n\nThis configurations uses Gmail's SMTP service as transport.\n\nBy running the `nodemailer:external` task HTML body will be overridden.\n\n```js\ngrunt.initConfig({\n  nodemailer: {\n\n    options: {\n      transport: {\n        type: 'SMTP',\n        options: {\n          service: 'Gmail',\n          auth: {\n            user: 'john.doe@gmail.com',\n            pass: 'password'\n          }\n        }\n      },\n      message: {\n        subject: 'A test e-mail',\n        text: 'Plain text message',\n        html: '<body><h1>HTML custom message</h1></body>',\n      },\n      recipients: [\n        {\n          email: 'jane.doe@gmail.com',\n          name: 'Jane Doe'\n        }\n      ]\n    },\n\n    inline: { /* use above options*/ },\n\n    external: {\n      src: ['email-body.html']\n    }\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n0.2.1 Display error message instead of error name (fixes issue #3 thanks to @aszmyd)\n\n0.2.0 - Task allows for multiple external sources to better comply to [Grunt's file APIs](http://gruntjs.com/configuring-tasks#files). As of this version, you may set any supported [Nodemailer message's option](https://github.com/andris9/Nodemailer#e-mail-message-fields) onto `options.message`. Added some tests.\n\n0.1.2 - Replaced [deprecated](http://gruntjs.com/blog/2013-11-21-grunt-0.4.2-released) reference to `grunt.util._` with `lodash` npm module\n\n0.1.1 - Bugfix\n\n0.1.0 - Initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-nodemailer@0.2.1",
  "dist": {
    "shasum": "9f94e6ebae51dcc662f9d4e9ee1e304a014e28cb"
  },
  "_from": "grunt-nodemailer@",
  "_resolved": "https://registry.npmjs.org/grunt-nodemailer/-/grunt-nodemailer-0.2.1.tgz"
}
